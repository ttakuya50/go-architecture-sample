// Code generated by MockGen. DO NOT EDIT.
// Source: random.go

// Package repository is a generated GoMock package.
package repository

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRandomRepo is a mock of RandomRepo interface.
type MockRandomRepo struct {
	ctrl     *gomock.Controller
	recorder *MockRandomRepoMockRecorder
}

// MockRandomRepoMockRecorder is the mock recorder for MockRandomRepo.
type MockRandomRepoMockRecorder struct {
	mock *MockRandomRepo
}

// NewMockRandomRepo creates a new mock instance.
func NewMockRandomRepo(ctrl *gomock.Controller) *MockRandomRepo {
	mock := &MockRandomRepo{ctrl: ctrl}
	mock.recorder = &MockRandomRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRandomRepo) EXPECT() *MockRandomRepoMockRecorder {
	return m.recorder
}

// Int63 mocks base method.
func (m *MockRandomRepo) Int63() int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Int63")
	ret0, _ := ret[0].(int64)
	return ret0
}

// Int63 indicates an expected call of Int63.
func (mr *MockRandomRepoMockRecorder) Int63() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Int63", reflect.TypeOf((*MockRandomRepo)(nil).Int63))
}
